name: Release to PyPI (all CRISP-DM packages)

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: read
  id-token: write

jobs:
  publish:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        pkg:
          - business_understanding
          - data_understanding
          - data_preparation
          - modeling
          - evaluation
          - deployment

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip

      - name: Install build & twine
        run: |
          python -m pip install -U pip
          pip install build twine

      # Pisa la versiÃ³n del paquete con el tag (vX.Y.Z -> X.Y.Z)
      - name: Set version from tag into pyproject.toml
        working-directory: CRISP-DM/${{ matrix.pkg }}
        env:
          TAG: ${{ github.ref_name }}
        run: |
          V="${TAG#v}"
          python - <<'PY'
          import os, re, pathlib
          v = os.getenv("V")
          p = pathlib.Path("pyproject.toml")
          s = p.read_text(encoding="utf8")
          s = re.sub(r'(?m)^\s*version\s*=\s*".*?"\s*$',
                     f'version = "{v}"', s, count=1)
          p.write_text(s, encoding="utf8")
          print("Stamped version:", v, "in", p)
          PY

      - name: Build sdist & wheel
        working-directory: CRISP-DM/${{ matrix.pkg }}
        run: |
          python -m build
          python -m twine check dist/*

      - name: Upload to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          python -m twine upload CRISP-DM/${{ matrix.pkg }}/dist/*
